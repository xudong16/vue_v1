{"ast":null,"code":"import UserAddUpdate from './UserAddUpdate.vue';\nexport default {\n  name: 'User',\n  data() {\n    return {\n      // 查询表单数据\n      searchForm: {\n        username: undefined,\n        nickName: undefined,\n        mobile: undefined,\n        gender: undefined\n      },\n      // 表格数据\n      tableData: [],\n      // 分页数据\n      pageData: {\n        current: 1,\n        size: 5,\n        total: 0\n      }\n    };\n  },\n  methods: {\n    // 页码变化事件函数\n    currentChangeHandle(page) {\n      this.pageData.current = page;\n      this.queryUser();\n    },\n    // 页码大小变化事件函数\n    sizeChangeHandle(size) {\n      this.pageData.size = size;\n      this.pageData.current = 1;\n      this.queryUser();\n    },\n    // 查询用户\n    queryUser() {\n      this.$axios.get('/users', {\n        params: {\n          // 分页相关\n          _page: this.pageData.current,\n          _limit: this.pageData.size,\n          // 查询条件\n          username: this.searchForm.username || undefined,\n          nickName: this.searchForm.nickName || undefined,\n          mobile: this.searchForm.mobile || undefined,\n          gender: this.searchForm.gender || undefined\n        }\n      }).then(response => {\n        this.tableData = response.data;\n        // 分页时总记录数是在响应头中x-total-count字段中携带的\n        this.pageData.total = parseInt(response.headers['x-total-count']);\n        // console.log(response.headers['x-total-count']);\n      });\n    },\n    // 性别列格式化\n    genderFormatter(row, column, cellValue) {\n      if (cellValue == 1) {\n        return '男性';\n      } else if (cellValue == 2) {\n        return '女性';\n      } else if (cellValue == 3) {\n        return '未知';\n      } else {\n        return '性别错误';\n      }\n    },\n    // 新增编辑页\n    addUpdateUser(id) {\n      //    父调子函数\n      this.$refs.addUpdate.initDialog(id);\n    },\n    // 删除用户\n    deleteUser(id) {\n      this.$confirm('确认删除该用户吗？', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.$axios.delete(`/users/${id}`).then(response => {\n          this.$message.success('删除成功');\n          this.queryUser();\n        });\n      }).catch(() => {});\n    }\n  },\n  mounted() {\n    this.queryUser();\n  },\n  components: {\n    UserAddUpdate\n  }\n};","map":{"version":3,"names":["UserAddUpdate","name","data","searchForm","username","undefined","nickName","mobile","gender","tableData","pageData","current","size","total","methods","currentChangeHandle","page","queryUser","sizeChangeHandle","$axios","get","params","_page","_limit","then","response","parseInt","headers","genderFormatter","row","column","cellValue","addUpdateUser","id","$refs","addUpdate","initDialog","deleteUser","$confirm","type","delete","$message","success","catch","mounted","components"],"sources":["src/views/page/User.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 查询表单 -->\r\n        <el-form inline>\r\n            <el-form-item>\r\n                <el-input v-model=\"searchForm.username\" placeholder=\"用户名\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input v-model=\"searchForm.nickName\" placeholder=\"昵称\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input v-model=\"searchForm.mobile\" placeholder=\"手机号\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-select v-model=\"searchForm.gender\" placeholder=\"性别\" clearable>\r\n                    <el-option label=\"男性\" value=\"1\"></el-option>\r\n                    <el-option label=\"女性\" value=\"2\"></el-option>\r\n                    <el-option label=\"未知\" value=\"3\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"queryUser\">查询</el-button>\r\n                <el-button type=\"primary\" @click=\"addUpdateUser()\">新增用户</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n        <!-- 数据表格 -->\r\n        <el-table :data=\"tableData\" border stripe>\r\n            <el-table-column prop=\"id\" label=\"ID\" header-align=\"center\" width=\"70\" fixed></el-table-column>\r\n            <el-table-column prop=\"username\" label=\"用户名\" header-align=\"center\" fixed></el-table-column>\r\n            <el-table-column prop=\"nickName\" label=\"昵称\" header-align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"mobile\" label=\"手机号\" header-align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"gender\" label=\"性别\" header-align=\"center\" :formatter=\"genderFormatter\"></el-table-column>\r\n            <el-table-column label=\"操作\" header-align=\"center\" align=\"center\" width=\"150\" fixed=\"right\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"warning\" size=\"mini\" @click=\"addUpdateUser(scope.row.id)\">编辑</el-button>\r\n                    <el-button type=\"danger\" size=\"mini\" @click=\"deleteUser(scope.row.id)\">删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <!-- 分页 -->\r\n         <!-- \r\n        事件函数\r\n        @current-change 自定义事件，页码变化时自动触发\r\n         -->\r\n        <el-pagination :current-page=\"pageData.current\" :page-size=\"pageData.size\" :total=\"pageData.total\"\r\n            :page-sizes=\"[5, 10, 20, 50]\" layout=\"sizes, prev, pager, next, ->, total, jumper\"\r\n            @current-change=\"currentChangeHandle\" @size-change=\"sizeChangeHandle\">\r\n        </el-pagination>\r\n        <!-- 新增编辑页 -->\r\n         <user-add-update ref=\"addUpdate\" @refreshTable=\"queryUser\"></user-add-update>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport UserAddUpdate from './UserAddUpdate.vue';\r\nexport default {\r\n    name: 'User',\r\n    data() {\r\n        return {\r\n            // 查询表单数据\r\n            searchForm: {\r\n                username: undefined,\r\n                nickName: undefined,\r\n                mobile: undefined,\r\n                gender: undefined\r\n            },\r\n            // 表格数据\r\n            tableData: [],\r\n            // 分页数据\r\n            pageData: {\r\n                current: 1,\r\n                size: 5,\r\n                total: 0\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        // 页码变化事件函数\r\n        currentChangeHandle(page) {\r\n            this.pageData.current = page;\r\n            this.queryUser();\r\n        },\r\n        // 页码大小变化事件函数\r\n        sizeChangeHandle(size) {\r\n            this.pageData.size = size;  \r\n            this.pageData.current = 1;\r\n            this.queryUser();\r\n        },\r\n        // 查询用户\r\n        queryUser() {\r\n            this.$axios.get('/users',{\r\n                params: {\r\n                    // 分页相关\r\n                    _page: this.pageData.current,\r\n                    _limit: this.pageData.size,\r\n                    // 查询条件\r\n                    username: this.searchForm.username || undefined,\r\n                    nickName: this.searchForm.nickName || undefined,\r\n                    mobile: this.searchForm.mobile || undefined,\r\n                    gender: this.searchForm.gender || undefined,\r\n                }\r\n            }).then(response => {\r\n                this.tableData = response.data;\r\n                // 分页时总记录数是在响应头中x-total-count字段中携带的\r\n                this.pageData.total = parseInt(response.headers['x-total-count']);\r\n                // console.log(response.headers['x-total-count']);\r\n            });\r\n        },\r\n        // 性别列格式化\r\n        genderFormatter(row, column, cellValue) {\r\n            if (cellValue == 1) {\r\n                return '男性';\r\n            } else if (cellValue == 2) {\r\n                return '女性';\r\n            } else if (cellValue == 3){\r\n                return '未知';\r\n            } else {\r\n                return '性别错误';\r\n            }\r\n        },\r\n        // 新增编辑页\r\n        addUpdateUser(id) {\r\n        //    父调子函数\r\n            this.$refs.addUpdate.initDialog(id);\r\n        },\r\n        // 删除用户\r\n        deleteUser(id) {\r\n            this.$confirm('确认删除该用户吗？', '提示', {type: 'warning'}).then(() => {\r\n                this.$axios.delete(`/users/${id}`).then(response => {\r\n                    this.$message.success('删除成功');\r\n                    this.queryUser();\r\n                });\r\n            }).catch(() => {});\r\n        }\r\n    },\r\n    mounted() {\r\n        this.queryUser(); \r\n    },\r\n    components: {\r\n        UserAddUpdate\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form-item {\r\n    margin: 20px 0px 10px ;\r\n}\r\n</style>"],"mappings":"AAsDA,OAAAA,aAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACAC,UAAA;QACAC,QAAA,EAAAC,SAAA;QACAC,QAAA,EAAAD,SAAA;QACAE,MAAA,EAAAF,SAAA;QACAG,MAAA,EAAAH;MACA;MACA;MACAI,SAAA;MACA;MACAC,QAAA;QACAC,OAAA;QACAC,IAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAC,oBAAAC,IAAA;MACA,KAAAN,QAAA,CAAAC,OAAA,GAAAK,IAAA;MACA,KAAAC,SAAA;IACA;IACA;IACAC,iBAAAN,IAAA;MACA,KAAAF,QAAA,CAAAE,IAAA,GAAAA,IAAA;MACA,KAAAF,QAAA,CAAAC,OAAA;MACA,KAAAM,SAAA;IACA;IACA;IACAA,UAAA;MACA,KAAAE,MAAA,CAAAC,GAAA;QACAC,MAAA;UACA;UACAC,KAAA,OAAAZ,QAAA,CAAAC,OAAA;UACAY,MAAA,OAAAb,QAAA,CAAAE,IAAA;UACA;UACAR,QAAA,OAAAD,UAAA,CAAAC,QAAA,IAAAC,SAAA;UACAC,QAAA,OAAAH,UAAA,CAAAG,QAAA,IAAAD,SAAA;UACAE,MAAA,OAAAJ,UAAA,CAAAI,MAAA,IAAAF,SAAA;UACAG,MAAA,OAAAL,UAAA,CAAAK,MAAA,IAAAH;QACA;MACA,GAAAmB,IAAA,CAAAC,QAAA;QACA,KAAAhB,SAAA,GAAAgB,QAAA,CAAAvB,IAAA;QACA;QACA,KAAAQ,QAAA,CAAAG,KAAA,GAAAa,QAAA,CAAAD,QAAA,CAAAE,OAAA;QACA;MACA;IACA;IACA;IACAC,gBAAAC,GAAA,EAAAC,MAAA,EAAAC,SAAA;MACA,IAAAA,SAAA;QACA;MACA,WAAAA,SAAA;QACA;MACA,WAAAA,SAAA;QACA;MACA;QACA;MACA;IACA;IACA;IACAC,cAAAC,EAAA;MACA;MACA,KAAAC,KAAA,CAAAC,SAAA,CAAAC,UAAA,CAAAH,EAAA;IACA;IACA;IACAI,WAAAJ,EAAA;MACA,KAAAK,QAAA;QAAAC,IAAA;MAAA,GAAAf,IAAA;QACA,KAAAL,MAAA,CAAAqB,MAAA,WAAAP,EAAA,IAAAT,IAAA,CAAAC,QAAA;UACA,KAAAgB,QAAA,CAAAC,OAAA;UACA,KAAAzB,SAAA;QACA;MACA,GAAA0B,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAA3B,SAAA;EACA;EACA4B,UAAA;IACA7C;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}