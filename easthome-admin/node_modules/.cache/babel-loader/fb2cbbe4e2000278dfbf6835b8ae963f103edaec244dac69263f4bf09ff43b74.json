{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 导入新增修改页\nimport { _ } from \"core-js\";\nexport default {\n  name: 'Chapter',\n  data() {\n    return {\n      // 课程\n      course: {\n        id: undefined,\n        courseName: undefined\n      },\n      // 课程章节数组\n      chapters: []\n    };\n  },\n  methods: {\n    //获取章节列表，参数courseId\n\n    //\n    queryChapter(courseId) {\n      this.$axios.get('/chapters', {\n        params: {\n          courseId: this.course.id,\n          _sort: 'sortNum'\n        }\n      }).then(response => {\n        this.chapters = response.data;\n      });\n    },\n    addUpdateChapter(id) {\n      if (id) {\n        this.$router.push({\n          name: \"ChapterAddUpdate\",\n          params: {\n            id\n          }\n        });\n      } else {\n        this.$router.push({\n          name: \"ChapterAddUpdate\"\n        });\n      }\n    },\n    deleteChapter(id) {\n      this.$confirm('确定要删除该课程吗?', '提示', {\n        type: 'warning'\n      }).then(() => {\n        this.$axios.delete(`/chapters/${id}`).then(response => {\n          this.$message.success('课程删除成功');\n          this.queryChapter(this.course.id);\n        });\n      }).catch(() => {});\n    }\n  },\n  mounted() {\n    let params = this.$route.params;\n    if (params.courseName && params.courseId) {\n      this.course.courseName = params.courseName;\n      this.course.id = params.courseId;\n      this.queryChapter(this.course.id);\n    }\n  }\n};","map":{"version":3,"names":["_","name","data","course","id","undefined","courseName","chapters","methods","queryChapter","courseId","$axios","get","params","_sort","then","response","addUpdateChapter","$router","push","deleteChapter","$confirm","type","delete","$message","success","catch","mounted","$route"],"sources":["src/views/page/Chapter.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 头部 -->\r\n        <el-page-header @back=\"() => this.$router.back()\" :content=\"course.courseName\">\r\n        </el-page-header>\r\n        <!-- 添加章节按钮 -->\r\n        <div class=\"add-btn\">\r\n            <el-button type=\"primary\" @click=\"addUpdateChapter()\">添加章节</el-button>\r\n        </div>\r\n        <!-- 树形控件:展示课程对应的章节信息 -->\r\n        <el-tree :data=\"chapters\">\r\n            <!-- slot-scope：代表当前树节点内容，有两个参数 data表示当前树节点, node表示当前节点状态 -->\r\n            <div class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n                <span>{{ data.chapterName }}</span>\r\n                <span>\r\n                    <el-button type=\"warning\" size=\"small\" icon=\"el-icon-edit\" @click=\"addUpdateChapter(data.id)\"></el-button>\r\n                    <el-button type=\"danger\" size=\"small\" icon=\"el-icon-delete\" @click=\"deleteChapter(data.id)\"></el-button>\r\n                </span>\r\n            </div>\r\n        </el-tree>\r\n\r\n        <!-- <chapter-add-update ref=\"addUpdate\" @refreshData=\"queryChapter\"></chapter-add-update> -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// 导入新增修改页\r\nimport { _ } from \"core-js\";\r\nexport default {\r\n    name: 'Chapter',\r\n    data() {\r\n        return {\r\n            // 课程\r\n            course: {\r\n                id: undefined,\r\n                courseName: undefined\r\n            },\r\n            // 课程章节数组\r\n            chapters: []\r\n        };\r\n    },\r\n    methods: {\r\n        //获取章节列表，参数courseId\r\n\r\n        //\r\n        queryChapter(courseId) {\r\n            this.$axios.get('/chapters', {\r\n                params: {\r\n                    courseId: this.course.id,\r\n                    _sort: 'sortNum',\r\n                }\r\n            }).then(response => {\r\n                this.chapters = response.data;\r\n            });\r\n        },\r\n        addUpdateChapter(id) {\r\n      if (id) {\r\n        this.$router.push({ name: \"ChapterAddUpdate\", params: { id } });\r\n      } else {\r\n        this.$router.push({ name: \"ChapterAddUpdate\" });\r\n      }\r\n    },\r\n        deleteChapter(id) {\r\n            this.$confirm('确定要删除该课程吗?', '提示', {\r\n                type: 'warning'\r\n            }).then(() => {\r\n                this.$axios.delete(`/chapters/${id}`).then(response => {\r\n                    this.$message.success('课程删除成功');\r\n                    this.queryChapter(this.course.id);\r\n                });\r\n            }).catch(()=> {\r\n            })\r\n        },\r\n    },\r\n    mounted() {\r\n        let params = this.$route.params;\r\n        \r\n        if (params.courseName && params.courseId) {\r\n            this.course.courseName = params.courseName;\r\n            this.course.id = params.courseId;\r\n            this.queryChapter(this.course.id)\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.el-page-header {\r\n    margin: 10px 0 30px;\r\n}\r\n\r\n.add-btn {\r\n    margin: 20px 0;\r\n}\r\n\r\n.el-tree /deep/ .el-tree-node__content {\r\n    height: auto;\r\n}\r\n\r\n.custom-tree-node {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex: auto;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #e7e7e7;\r\n}\r\n</style>\r\n"],"mappings":";AA0BA;AACA,SAAAA,CAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACA;MACAC,MAAA;QACAC,EAAA,EAAAC,SAAA;QACAC,UAAA,EAAAD;MACA;MACA;MACAE,QAAA;IACA;EACA;EACAC,OAAA;IACA;;IAEA;IACAC,aAAAC,QAAA;MACA,KAAAC,MAAA,CAAAC,GAAA;QACAC,MAAA;UACAH,QAAA,OAAAP,MAAA,CAAAC,EAAA;UACAU,KAAA;QACA;MACA,GAAAC,IAAA,CAAAC,QAAA;QACA,KAAAT,QAAA,GAAAS,QAAA,CAAAd,IAAA;MACA;IACA;IACAe,iBAAAb,EAAA;MACA,IAAAA,EAAA;QACA,KAAAc,OAAA,CAAAC,IAAA;UAAAlB,IAAA;UAAAY,MAAA;YAAAT;UAAA;QAAA;MACA;QACA,KAAAc,OAAA,CAAAC,IAAA;UAAAlB,IAAA;QAAA;MACA;IACA;IACAmB,cAAAhB,EAAA;MACA,KAAAiB,QAAA;QACAC,IAAA;MACA,GAAAP,IAAA;QACA,KAAAJ,MAAA,CAAAY,MAAA,cAAAnB,EAAA,IAAAW,IAAA,CAAAC,QAAA;UACA,KAAAQ,QAAA,CAAAC,OAAA;UACA,KAAAhB,YAAA,MAAAN,MAAA,CAAAC,EAAA;QACA;MACA,GAAAsB,KAAA,QACA;IACA;EACA;EACAC,QAAA;IACA,IAAAd,MAAA,QAAAe,MAAA,CAAAf,MAAA;IAEA,IAAAA,MAAA,CAAAP,UAAA,IAAAO,MAAA,CAAAH,QAAA;MACA,KAAAP,MAAA,CAAAG,UAAA,GAAAO,MAAA,CAAAP,UAAA;MACA,KAAAH,MAAA,CAAAC,EAAA,GAAAS,MAAA,CAAAH,QAAA;MACA,KAAAD,YAAA,MAAAN,MAAA,CAAAC,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}