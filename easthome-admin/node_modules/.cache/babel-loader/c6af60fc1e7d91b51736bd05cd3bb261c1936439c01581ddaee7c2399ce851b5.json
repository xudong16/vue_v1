{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      dataForm: {\n        username: \"\",\n        password: \"\"\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入用户名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }]\n      },\n      first: true,\n      second: false\n    };\n  },\n  methods: {\n    submitForm() {\n      // 表单验证\n      this.$refs.login.validate(valid => {\n        if (valid) {\n          // 登录：\n          // this.login();\n          this.$axios.get('/users', {\n            params: {\n              username: this.dataForm.username,\n              password: this.dataForm.password\n            }\n          }).then(({\n            data\n          }) => {\n            if (data.length != 0) {\n              this.$message.success(`登陆成功!欢迎您:${data[0].nickName}`);\n              sessionStorage.setItem('loginUser', JSON.stringify(data[0]));\n              this.$router.replace('/');\n            } else {\n              this.$message.error(\"账号或密码错误!!\");\n            }\n          });\n        } else {\n          this.$message.error(\"账号或密码错误!!\");\n          return false;\n        }\n      });\n    },\n    changeImages() {\n      this.first = !this.first;\n      this.second = !this.second;\n    }\n    /* login() {\r\n      let nickname;\r\n      // 假设你已经从服务器获取了用户数据到 this.users\r\n      const user = this.users.find((u) => {\r\n        if (\r\n          u.username === this.dataForm.username &&\r\n          u.password === this.dataForm.password\r\n        ) {\r\n          this.nickname = u.nickName; // 更新昵称变量\r\n          sessionStorage.setItem('nickName', this.nickname); // 保存到 sessionStorage\r\n          return true; // 找到匹配项，返回 true 退出 find 方法\r\n        }\r\n        return false; // 默认返回 false 继续查找\r\n      });\r\n      if (user) {\r\n        // 进行其他登录后操作，比如保存用户信息到 localStorage 或 vuex\r\n        this.$router.push(\"/welcome\");\r\n        this.$message.success(`登陆成功!欢迎您:${this.nickname}`);\r\n      } else {\r\n        // 登录失败逻辑\r\n        this.$message.error(\"账号或密码错误!!\");\r\n      }\r\n    }, */\n    /*  fetchUsers() {\r\n       // 使用 axios 发送请求到 json-server 获取用户数据\r\n       axios\r\n         .get(\"http://localhost:8080/users\")\r\n         .then((response) => {\r\n           this.users = response.data; // 将获取到的用户数据存储到 data 中\r\n         })\r\n         .catch(() => {});\r\n     }, */\n  },\n  created() {\n    // 组件创建时获取用户数据\n  },\n  components: {}\n};","map":{"version":3,"names":["axios","data","dataForm","username","password","rules","required","message","trigger","first","second","methods","submitForm","$refs","login","validate","valid","$axios","get","params","then","length","$message","success","nickName","sessionStorage","setItem","JSON","stringify","$router","replace","error","changeImages","created","components"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-wrap\">\r\n    <div class=\"ms-login\">\r\n      <div class=\"ms-title\">请登录</div>\r\n      <el-form\r\n        class=\"ms-content\"\r\n        ref=\"login\"\r\n        :model=\"dataForm\"\r\n        :rules=\"rules\"\r\n        label-width=\"0px\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"dataForm.username\"\r\n            placeholder=\"用户名\"\r\n            prefix-icon=\"el-icon-user\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            placeholder=\"密码\"\r\n            v-model=\"dataForm.password\"\r\n            show-password\r\n            @keyup.enter.native=\"submitForm()\"\r\n            @focus=\"changeImages()\"\r\n            @blur=\"changeImages()\"\r\n            prefix-icon=\"el-icon-lock\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm()\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n            <img class=\"leftImg\" src=\"../assets/left1.png\" v-show=\"first\">\r\n            <img class=\"rightImg\" src=\"../assets/right1.png\" v-show=\"first\">\r\n            <img class=\"leftImg\" src=\"../assets/left2.png\" v-show=\"second\">\r\n            <img class=\"rightImg\" src=\"../assets/right2.png\" v-show=\"second\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      dataForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n        ],\r\n        password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\r\n      },\r\n      first: true,\r\n      second: false\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      // 表单验证\r\n      this.$refs.login.validate((valid) => {\r\n        if (valid) {\r\n          // 登录：\r\n          // this.login();\r\n          this.$axios.get('/users', {\r\n            params: {\r\n              username: this.dataForm.username,\r\n              password: this.dataForm.password,\r\n            }\r\n          }).then(({data}) => {\r\n            if(data.length != 0) {\r\n              this.$message.success(`登陆成功!欢迎您:${data[0].nickName}`);\r\n              sessionStorage.setItem('loginUser', JSON.stringify(data[0]));\r\n              this.$router.replace('/');\r\n            }else {\r\n              this.$message.error(\"账号或密码错误!!\");\r\n            }\r\n          })\r\n        } else {\r\n          this.$message.error(\"账号或密码错误!!\");\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    changeImages() {\r\n            this.first = !this.first;\r\n            this.second = !this.second;\r\n        },\r\n    /* login() {\r\n      let nickname;\r\n      // 假设你已经从服务器获取了用户数据到 this.users\r\n      const user = this.users.find((u) => {\r\n        if (\r\n          u.username === this.dataForm.username &&\r\n          u.password === this.dataForm.password\r\n        ) {\r\n          this.nickname = u.nickName; // 更新昵称变量\r\n          sessionStorage.setItem('nickName', this.nickname); // 保存到 sessionStorage\r\n          return true; // 找到匹配项，返回 true 退出 find 方法\r\n        }\r\n        return false; // 默认返回 false 继续查找\r\n      });\r\n      if (user) {\r\n        // 进行其他登录后操作，比如保存用户信息到 localStorage 或 vuex\r\n        this.$router.push(\"/welcome\");\r\n        this.$message.success(`登陆成功!欢迎您:${this.nickname}`);\r\n      } else {\r\n        // 登录失败逻辑\r\n        this.$message.error(\"账号或密码错误!!\");\r\n      }\r\n    }, */\r\n   /*  fetchUsers() {\r\n      // 使用 axios 发送请求到 json-server 获取用户数据\r\n      axios\r\n        .get(\"http://localhost:8080/users\")\r\n        .then((response) => {\r\n          this.users = response.data; // 将获取到的用户数据存储到 data 中\r\n        })\r\n        .catch(() => {});\r\n    }, */\r\n  },\r\n  created() {\r\n    // 组件创建时获取用户数据\r\n  },\r\n  components: {},\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-wrap {\r\n  height: 100vh;\r\n  background-image: url(~@/assets/bg.jpg);\r\n  background-size: cover;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.ms-login {\r\n  width: 500px;\r\n  height: 350px;\r\n  border-radius: 5px;\r\n  background: rgb(255, 255, 255);\r\n  overflow: hidden;\r\n  position: relative;\r\n  padding: 0;\r\n}\r\n\r\n.ms-title {\r\n  font-size: 20px;\r\n  line-height: 50px;\r\n  text-align: center;\r\n  color: #ddd;\r\n  border-bottom: 1px solid #ddd;\r\n  letter-spacing: 10px;\r\n}\r\n\r\n.ms-content {\r\n  padding: 30px 30px 10px;\r\n}\r\n\r\n.el-button {\r\n  width: 100%;\r\n}\r\n.leftImg {\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 90px;\r\n    /* 设置图片宽度，根据实际情况调整 */\r\n    height: auto;\r\n}\r\n\r\n.rightImg {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 90px;\r\n    /* 设置图片宽度，根据实际情况调整 */\r\n    height: auto;\r\n}\r\n</style>\r\n"],"mappings":"AA0CA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA;MACA,KAAAC,KAAA,CAAAC,KAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA;UACA,KAAAC,MAAA,CAAAC,GAAA;YACAC,MAAA;cACAhB,QAAA,OAAAD,QAAA,CAAAC,QAAA;cACAC,QAAA,OAAAF,QAAA,CAAAE;YACA;UACA,GAAAgB,IAAA;YAAAnB;UAAA;YACA,IAAAA,IAAA,CAAAoB,MAAA;cACA,KAAAC,QAAA,CAAAC,OAAA,aAAAtB,IAAA,IAAAuB,QAAA;cACAC,cAAA,CAAAC,OAAA,cAAAC,IAAA,CAAAC,SAAA,CAAA3B,IAAA;cACA,KAAA4B,OAAA,CAAAC,OAAA;YACA;cACA,KAAAR,QAAA,CAAAS,KAAA;YACA;UACA;QACA;UACA,KAAAT,QAAA,CAAAS,KAAA;UACA;QACA;MACA;IACA;IACAC,aAAA;MACA,KAAAvB,KAAA,SAAAA,KAAA;MACA,KAAAC,MAAA,SAAAA,MAAA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;EACAuB,QAAA;IACA;EAAA,CACA;EACAC,UAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}